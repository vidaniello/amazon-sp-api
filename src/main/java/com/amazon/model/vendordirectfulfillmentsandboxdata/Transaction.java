/*
 * Selling Partner API for Vendor Direct Fulfillment Sandbox Test Data
 * The Selling Partner API for Vendor Direct Fulfillment Sandbox Test Data provides programmatic access to vendor direct fulfillment sandbox test data.
 *
 * OpenAPI spec version: 2021-10-28
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.model.vendordirectfulfillmentsandboxdata;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.model.vendordirectfulfillmentsandboxdata.TestCaseData;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The transaction details including the status. If the transaction was successful, also includes the requested test order data.
 */
@ApiModel(description = "The transaction details including the status. If the transaction was successful, also includes the requested test order data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-05-11T14:54:25.432+02:00")
public class Transaction {
  @SerializedName("transactionId")
  private String transactionId = null;

  /**
   * The current processing status of the transaction.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    FAILURE("FAILURE"),
    
    PROCESSING("PROCESSING"),
    
    SUCCESS("SUCCESS");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("testCaseData")
  private TestCaseData testCaseData = null;

  public Transaction transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * The unique identifier returned in the response to the generateOrderScenarios request.
   * @return transactionId
  **/
  @ApiModelProperty(required = true, value = "The unique identifier returned in the response to the generateOrderScenarios request.")
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public Transaction status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The current processing status of the transaction.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The current processing status of the transaction.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Transaction testCaseData(TestCaseData testCaseData) {
    this.testCaseData = testCaseData;
    return this;
  }

   /**
   * Test case data for the transaction. Only available when the transaction status is SUCCESS.
   * @return testCaseData
  **/
  @ApiModelProperty(value = "Test case data for the transaction. Only available when the transaction status is SUCCESS.")
  public TestCaseData getTestCaseData() {
    return testCaseData;
  }

  public void setTestCaseData(TestCaseData testCaseData) {
    this.testCaseData = testCaseData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.transactionId, transaction.transactionId) &&
        Objects.equals(this.status, transaction.status) &&
        Objects.equals(this.testCaseData, transaction.testCaseData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, status, testCaseData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    testCaseData: ").append(toIndentedString(testCaseData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

