/*
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.model.orders;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.model.orders.OrderItemApprovals;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The order items list with approvals along with the order ID.
 */
@ApiModel(description = "The order items list with approvals along with the order ID.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-05-11T14:53:04.283+02:00")
public class OrderApprovalsResponse {
  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("OrderItemsApprovalsList")
  private List<OrderItemApprovals> orderItemsApprovalsList = new ArrayList<OrderItemApprovals>();

  public OrderApprovalsResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * When present and not empty, pass this string token in the next request to return the next response page.
   * @return nextToken
  **/
  @ApiModelProperty(value = "When present and not empty, pass this string token in the next request to return the next response page.")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public OrderApprovalsResponse orderItemsApprovalsList(List<OrderItemApprovals> orderItemsApprovalsList) {
    this.orderItemsApprovalsList = orderItemsApprovalsList;
    return this;
  }

  public OrderApprovalsResponse addOrderItemsApprovalsListItem(OrderItemApprovals orderItemsApprovalsListItem) {
    this.orderItemsApprovalsList.add(orderItemsApprovalsListItem);
    return this;
  }

   /**
   * List of OrderItemApprovals.
   * @return orderItemsApprovalsList
  **/
  @ApiModelProperty(required = true, value = "List of OrderItemApprovals.")
  public List<OrderItemApprovals> getOrderItemsApprovalsList() {
    return orderItemsApprovalsList;
  }

  public void setOrderItemsApprovalsList(List<OrderItemApprovals> orderItemsApprovalsList) {
    this.orderItemsApprovalsList = orderItemsApprovalsList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderApprovalsResponse orderApprovalsResponse = (OrderApprovalsResponse) o;
    return Objects.equals(this.nextToken, orderApprovalsResponse.nextToken) &&
        Objects.equals(this.orderItemsApprovalsList, orderApprovalsResponse.orderItemsApprovalsList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextToken, orderItemsApprovalsList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderApprovalsResponse {\n");
    
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    orderItemsApprovalsList: ").append(toIndentedString(orderItemsApprovalsList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

